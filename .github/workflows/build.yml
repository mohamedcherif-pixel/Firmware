name: Build and Deploy Encrypted Firmware

on:
  push:
    branches: [ main, master ]
    paths:
      - 'ESP32_Encrypted_Firmware/**'
      - '.github/workflows/build.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pycryptodome
    
    - name: Set up Arduino CLI
      uses: arduino/setup-arduino-cli@v1
    
    - name: Install ESP32 core
      run: |
        arduino-cli core install esp32:esp32@2.0.0
    
    - name: Build firmware
      run: |
        cd ESP32_Encrypted_Firmware
        arduino-cli compile --fqbn esp32:esp32:esp32 --output-dir ./build
    
    - name: Get version
      id: version
      run: |
        VERSION=$(grep -oP '#define FIRMWARE_VERSION \K[0-9]+' ESP32_Encrypted_Firmware/ESP32_Encrypted_Firmware.ino || echo "1")
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Encrypt firmware
      run: |
        python tools/encrypt_firmware.py encrypt \
          -i ESP32_Encrypted_Firmware/build/ESP32_Encrypted_Firmware.ino.esp32.bin \
          -o firmware_encrypted_v${{ steps.version.outputs.VERSION }}.bin
    
    - name: Create version file
      run: |
        echo "${{ steps.version.outputs.VERSION }}" > version.txt
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-v${{ steps.version.outputs.VERSION }}
        path: |
          firmware_encrypted_v${{ steps.version.outputs.VERSION }}.bin
          version.txt
    
    - name: Create/Update Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          firmware_encrypted_v${{ steps.version.outputs.VERSION }}.bin
          version.txt
        tag_name: v${{ steps.version.outputs.VERSION }}
        release_name: Firmware v${{ steps.version.outputs.VERSION }}
        body: |
          ## Automated Build
          - Version: ${{ steps.version.outputs.VERSION }}
          - Built: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          - Commit: ${{ github.sha }}
        draft: false
        prerelease: false
        overwrite: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
